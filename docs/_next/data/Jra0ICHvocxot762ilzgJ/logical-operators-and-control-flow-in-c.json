{"pageProps":{"mdContent":"<p>Logical operators:</p>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&#x26;&#x26;</code></td>\n<td>AND</td>\n</tr>\n<tr>\n<td>||</td>\n<td>OR</td>\n</tr>\n<tr>\n<td><code>!</code></td>\n<td>NOT</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>For description, see first part of <a href=\"logical-connectives\">Logical Connectives</a></p>\n</blockquote>\n<h1>Conditionals</h1>\n<p>C has <code>if</code> and <code>switch</code> statements</p>\n<p><code>if</code> statements functional in a fairly standard way in C</p>\n<p><strong>Be careful not to accidentially assign inside an <code>if</code> statement in C - assignments in C are expressions, which may result in a \"condition\" being always true or false!</strong></p>\n<pre><code class=\"language-c\">// This is effectively if(0)\nif (x = 0) { // Assignment instead of == equality\n\tprintf(\"This never executes because of above error!!\\n\");\n}\n</code></pre>\n<h1>Loops</h1>\n<p><code>while (condition){}</code>: Can iterate zero or more times, as long as <code>condition</code> is true</p>\n<p><code>do {} while (condition)</code>: Will iterate one or more times, checks if condition is true at <strong>end</strong> of each execution</p>\n<p><code>for (initialize; condition; update)</code>: <code>initialize</code> happens once (first), then <code>condition</code> is checked before running loop, and <code>update</code> is run after each loop execution</p>\n<ul>\n<li><code>break</code> will immediately exit a loop</li>\n<li><code>continue</code> will immediately proceed to the next loop iteration</li>\n</ul>\n<blockquote>\n<p>Try to be clean with loops - only use <code>break</code> and <code>continue</code> when another type of loop implementation is not possible (as that would usually be cleaner)</p>\n</blockquote>","pageTitle":"Logical Operators and Control Flow in C"},"__N_SSG":true}