{"pageProps":{"mdContent":"<p><strong>Array:</strong> A collection of variables in a contiguous block of memory</p>\n<pre><code class=\"language-c\">int c[12];\n</code></pre>\n<blockquote>\n<p>Unlike in some other languages, array declarations go <strong>after the variable name</strong></p>\n</blockquote>\n<p>Elements in C arrays are undefined (like a buffer) until explicitly initialized</p>\n<p><strong>Aggregate initialization</strong> is possible at declaration using curly brackets. However, after initialization, aggregate <strong>assignment</strong> is not possible</p>\n<pre><code class=\"language-c\">int arr[] = {1, 2, 3, 4, 5};\n</code></pre>\n<blockquote>\n<p>With aggregate initialization, explicit array size can be omitted</p>\n</blockquote>\n<p>Out-of-bounds array access produces <strong>undefined values</strong> beyond the boundary in C! This will lead to undefined behavior, thus always perform bound checks</p>","pageTitle":"Arrays in C"},"__N_SSG":true}